############################################################
# Dockerfile to build Python WSGI Application Containers
# Jörgs Kalender
# Based on Centos 7
############################################################

# Set the base image to Centos 7
FROM centos
ENV LANG en_US.UTF-8

# File Author / Maintainer
MAINTAINER Jörg Bolay

RUN yum -y install epel-release
RUN yum -y update
RUN yum install -y python34 python34-pip gcc python34-devel git
RUN git clone https://github.com/mcjobo/cz-year-calendar
RUN pip3 install -r /cz-year-calendar/requirements.txt

# Expose ports
EXPOSE 8080

# Set the default directory where CMD will execute
WORKDIR /cz-year-calendar

# Set the default command to execute
# when creating a new container
# i.e. using CherryPy to serve the application
CMD python3 server.py


# https://www.digitalocean.com/community/tutorials/docker-explained-how-to-containerize-python-web-applications#docker-commands
# https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-centos-7


# Add the application resources URL
# RUN echo "deb http://archive.ubuntu.com/ubuntu/ $(lsb_release -sc) main universe" >> /etc/apt/sources.list

# Update the sources list
# RUN apt-get update

# Install basic applications
# RUN apt-get install -y tar git curl nano wget dialog net-tools build-essential

# Install Python and Basic Python Tools
# RUN apt-get install -y python python-dev python-distribute python-pip

# Copy the application folder inside the container
# ADD /my_application /my_application

# Get pip to download and install requirements:
# RUN pip install -r /my_application/requirements.txt
